create database Shopping_Cart


Create Table Customers(
CustomerId BIGINT  NOT NULL PRIMARY KEY  IDENTITY(1001,1),
FirstName VARCHAR(50)NOT NULL,
LastName VARCHAR(50)NOT NULL,
Address1 VARCHAR(200)NULL,
ZipCode varchar(5)NULL,
City VARCHAR(50)NULL,
State VARCHAR(50)NULL)

INSERT INTO Customers(FirstName,LastName,Address1,ZipCode,City,State) VALUES('John','Smith','No-45 Peter road',1111, 'Denver','Colorado')
INSERT INTO Customers(FirstName,LastName,Address1,ZipCode,City,State) VALUES('Paul','O''Brien','No-122 Nehru street ',2222,'Denver','Colorado')
INSERT INTO Customers(FirstName,LastName,Address1,ZipCode,City,State) VALUES('Sam','Vel','No-32 Balaji street',3333,'Denver','Colorado')
INSERT INTO Customers(FirstName,LastName,Address1,ZipCode,City,State) VALUES('Thulasi','Krishnan','No-32 St Mary road',4444,'Denver','Colorado')
INSERT INTO Customers(FirstName,LastName,Address1,ZipCode,City,State) VALUES('Oliver','Charlotte','No-56 St Peter road',5555,'Denver','Colorado')
INSERT INTO Customers(FirstName,LastName,Address1,ZipCode,City,State) VALUES('James','Smith','No-66 John Street',6666,'California','Sacramento')
INSERT INTO Customers(FirstName,LastName,Address1,ZipCode,City,State) VALUES('Robert','Willam','No-77 Willams Street',7777,'Hawaii','Honolulu')
INSERT INTO Customers(FirstName,LastName,Address1,ZipCode,City,State) VALUES('David','White','No-66 Anna street',8888,'Texas','Austin')
INSERT INTO Customers(FirstName,LastName,Address1,ZipCode,City,State) VALUES('Joseph','Clark','No-56 Gandhi street',9999,'Ohio','Columbus')
INSERT INTO Customers(FirstName,LastName,Address1,ZipCode,City,State) VALUES('Peter','Joe','North Main raod',1100,' Florida','Tallahassee')

SELECT * FROM Customers


Create Table Orders(
OrderId BIGINT NOT NULL PRIMARY KEY IDENTITY(10001,1),
OrderDate DATETIME NOT NULL,
CustomerId BIGINT NOT NULL FOREIGN KEY REFERENCES Customers (CustomerId))

INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-14 12:45:22',1001)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-15 02:02:34',1002)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-15 02:02:34',1003)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-15 04:24:37',1004)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-16 05:25:44',1005)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-16 09:45:33',1006)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-16 09:45:34',1007)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-16 09:45:33',1008)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-17 11:34:54',1009)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-17 12:23:44',1010)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-17 04:23:56',1004)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-18 09:22:54',1006)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-18 07:23:34',1008)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-18 09:32:44',1003)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-19 08:42:54',1006)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-19 04:22:24',1008)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-20 05:42:34',1010)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-21 06:42:24',1009)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-21 04:52:14',1007)
INSERT INTO Orders(OrderDate,CustomerId) VALUES('2022-11-21 07:32:54',1004)

SELECT * FROM Orders

Create Table OrderDetails(
OrderDetailsId BIGINT NOT NULL PRIMARY KEY IDENTITY(100001,1),
ProductName VARCHAR(50) NOT NULL,
Quantity INT NOT NULL,
Price DECIMAL NOT NULL,
OrderId BIGINT NOT NULL FOREIGN KEY REFERENCES Orders (OrderId))

INSERT INTO OrderDetails(ProductName,Quantity,Price, OrderId) VALUES('Hard Disk',2,3000,10001)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('KeyBoard and Monitor',1,2500,10002)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Monitor',2,5000,10003)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Hard Disk',5,4500,10004)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Mouse',6,6000,10005)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Hard Disk',4,6000,10006)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Keyboard',5,7500,10007)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('KeyBoard and Monitor',3,7500,10008)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Hard Disk',1,1500,10009)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Monitor',4,10000,10010)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Laptop',1,60000,10003)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Keyboard',2,5000,10005)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Printer',1,10000,10007)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Monitor',3,7500,10002)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Mouse',2,2000,10010)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Motherbox',3,6000,10005)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Controller',4,2000,10008)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Router',1,2000,10009)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Keyboard',2,5000,10001)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Hard Disk',3,4500,10003)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Hard Disk',4,6000,10005)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Monitor',3,7500,10004)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Hard Disk',2,3000,10007)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Hard Disk',3,4500,10008)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Monitor',3,7500,10002)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Hard Disk',3,7500,10006)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Monitor',3,7500,10004)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Hard Disk',3,7500,10002)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Monitor',3,7500,10007)
  INSERT INTO OrderDetails(ProductName,Quantity,Price,OrderId) VALUES('Router',3,7500,10009)


SELECT * FROM OrderDetails


SELECT * FROM Customers
SELECT * FROM Orders
SELECT * FROM OrderDetails

-- DML Query - Find the date on which maximum number of orders created

SELECT TOP 1  Orderdate , count(*) AS Maximum_Orders FROM Orders GROUP BY OrderDate ORDER BY Maximum_Orders DESC  

/*	Stored Procedure - Get First Name and Last Name of all Customers who has ordered at least one product
•	We need to list the customer First Name and Last Name of customers who  has ordered at least one product.*/
GO
CREATE PROCEDURE SelectAllCustomers 
As
SELECT  DISTINCT c.FirstName ,c.LastName FROM Customers AS c JOIN Orders o ON c.CustomerId = o.CustomerId
EXECUTE SelectAllCustomers
GO


/* DML Query - Find the customer first name and last name who ordered product named Hard Disk
	Get the customer first name and last name who ordered product named Hard Disk */

SELECT  c.FirstName ,c.LastName FROM Customers AS c 
JOIN Orders o ON c.CustomerId = o.CustomerId
JOIN OrderDetails od ON o.OrderId = od.OrderId
WHERE ProductName = 'Hard Disk'

--	DML Query - Find customer first name and last name who ordered for maximum of total price column

SELECT  c.FirstName,c.LastName,SUM(Price) AS Total_Price FROM OrderDetails od 
JOIN Orders o ON od.OrderId = o.OrderId 
JOIN Customers c ON o.CustomerId = c.CustomerId
GROUP BY c.CustomerId,c.FirstName,c.LastName 
ORDER BY Total_Price DESC


SELECT  TOP 1 c.FirstName,c.LastName,sum(Price) AS Amount FROM Customers c 
JOIN Orders o ON c.CustomerId = o.CustomerId
JOIN OrderDetails od ON od.OrderId = o.OrderId
GROUP BY c.CustomerId,c.FirstName,c.LastName
ORDER BY Amount DESC

/*	DML Query - Find Customers who has not ordered Hard Disk
	DML Query - Find Customers who never ordered a Hard Disk. Find the customer who has not ordered a hard disk in all of the orders.*/

SELECT C.FirstName,C.LastName FROM Customers c 
JOIN Orders o ON c.CustomerId = o.CustomerId
JOIN OrderDetails od ON od.OrderId = o.OrderId
WHERE ProductName != 'Hard Disk'

--	DML Query - Find First name and  Last name of the customers  who ordered monitor along with keyboard in the same order

SELECT c.FirstName,c.LastName FROM Customers c 
JOIN Orders o ON c.CustomerId = o.CustomerId
JOIN OrderDetails AS k
ON o.OrderId = k.OrderId and k.ProductName = 'Keyboard'
JOIN OrderDetails AS m 
ON o.OrderId = m.OrderId and m.ProductName = 'Monitor'

/*	DML Query - List the Customers personal information along with sum of total price of all their orders
	DML Query - List the customers personal information such as first name, last name city and state along with sum of total price of all their orders */

SELECT c.FirstName,c.LastName,c.City,c.State,SUM(Price)AS TotalPrice FROM Customers c  
JOIN Orders o ON c.CustomerId = o.CustomerId
JOIN OrderDetails od ON o.OrderId = od.OrderId
GROUP BY c.CustomerId,c.FirstName,c.LastName,c.City,c.State
ORDER BY TotalPrice DESC

/* 12.	DML Query - Find the customer First Name and Last Name who lives in the  State of CO or Colorado
	DML Query - Find Customer First Name and Last who lives in the State of  CO or Colorado */

SELECT DISTINCT c.FirstName,c.LastName,c.State FROM Customers c
JOIN Orders o ON c.CustomerId = o.CustomerId
JOIN OrderDetails od ON o.OrderId = od.OrderId
WHERE c.State = 'Colorado'

SELECT * FROM Customers WHERE State = 'Colorado'

/* 13.	DML Query - Find the customer who lives in the city of Denver
	Find the Customer Id, First Name, Last Name, Address 1, Zip, City, State who lives in the city named "Denver" */

SELECT  DISTINCT c.CustomerId,c.FirstName,c.LastName,c.Address1,c.ZipCode,c.City,c.State FROM Customers c
JOIN Orders o ON c.CustomerId = o.CustomerId
JOIN OrderDetails od ON o.OrderId = od.OrderId
WHERE c.City = 'Denver'

SELECT  DISTINCT * FROM Customers c
JOIN Orders o ON c.CustomerId = o.CustomerId
JOIN OrderDetails od ON o.OrderId = od.OrderId
WHERE c.City = 'Denver'

SELECT * FROM Customers WHERE City = 'Denver'

/* 14.	DML Query - Find the Customer who is called by his/her first name O'Brien (apostrophe)
	Find the CustomerId, FirstName, LastName, Address1, Zip, City, and State who is called by his/her first name O'Brien (apostrophe) */

SELECT * FROM Customers WHERE LastName = 'O''Brien'

SELECT * FROM Customers  WHERE LastName LIKE '%O''Brien%'

/* 15.	DML Query - List all the customers by ascending order of CustomerID
o	DML Query - List all the customers in the company by ascending order of CustomerID
o	The expected result columns are customer id, first name, last name, city, state and zip code */

SELECT CustomerId,FirstName,LastName,City,State,ZipCode FROM Customers 
ORDER BY CustomerId

SELECT * FROM Customers ORDER BY CustomerId
 
 /* 16.	DML Query - List all the customers by ascending order of First Name and descending order of Last Name
o	DML Query - List all the customers by ascending order of First Name and descending order of the Last Name */

SELECT * FROM Customers ORDER BY FirstName , LastName DESC

/* 17.	DML Query - Find how many number of customers exists 
o	DML Query - Find how many number of customers exists */

SELECT COUNT(CustomerId) AS TOTAL_CUSTOMERS 
FROM Customers
GROUP BY CustomerId

SELECT COUNT(*) AS total_Customers
FROM Customers

--18.	DML Query - Find how many number of customers lives in the state of Colorado or CO

SELECT COUNT(*) AS Total_Customers
FROM Customers
WHERE State = 'Colorado' 

--19.	DML Query - UPDATE - Update the address1 field of the customer by First Name and Last Name

UPDATE Customers SET Address1 = 'No 10 Big Street'
WHERE FirstName = 'John' AND LastName = 'Smith'

SELECT * FROM Customers

/*21.	DML Query - Find the sum of the amount of all orders placed by each customer
	DML Query - Find the sum of the amount of all orders placed by each customer. For each customer, find the total amount of orders that they have placed.*/

SELECT c.FirstName,c.LastName,SUM(Price)AS TotalPrice,COUNT(od.OrderId) AS Count FROM Customers c  
JOIN Orders o ON c.CustomerId = o.CustomerId
JOIN OrderDetails od ON o.OrderId = od.OrderId
GROUP BY c.CustomerId,c.FirstName,c.LastName
ORDER BY   Count DESC

/* 22.	DML Query - Find the top most customer who ordered for the maximum amount in all orders
o	Find the top most customer who has placed the orders for the maximum sum of the amount in all orders */

SELECT  TOP 1 c.FirstName,c.LastName,sum(Price) AS Amount FROM Customers c 
JOIN Orders o ON c.CustomerId = o.CustomerId
JOIN OrderDetails od ON od.OrderId = o.OrderId
GROUP BY c.CustomerId,c.FirstName,c.LastName
ORDER BY Amount DESC

--24.	DML Query - Day-wise revenue report - Find the sum of the amount of ALL orders by EVERY/EACH day

SELECT CONVERT(DATE, o.OrderDate) AS DATE,SUM(Price) AS Amount ,COUNT(od.OrderId) AS No_Count  FROM Orders o 
JOIN OrderDetails od ON o.OrderId = od.OrderId
GROUP BY CONVERT(DATE,o.OrderDate)

--25.	DML Query - Find the very latest order that has been placed

SELECT TOP 1 * FROM Orders o 
JOIN OrderDetails od ON o.OrderId = od.OrderId
ORDER BY o.OrderId DESC

--26.	DML Query - Find the sum of the amount of EACH order which has product name keyboard in it

SELECT SUM(Price) AS Amount ,od.ProductName FROM Orders o
JOIN OrderDetails od ON o.OrderId = od.OrderId
GROUP BY od.ProductName  
HAVING ProductName = 'Keyboard'

SELECT OrderId,ProductName,SUM(Price) AS Amount
FROM OrderDetails
GROUP BY OrderId,ProductName
HAVING ProductName = 'Keyboard'

/*27.	DML Query - Find the order which has more than one product ordered in it
OUTPUT COLUMNS
•	OrderId
•	Product Name
Note: Avoid duplicate rows */

SELECT  o.OrderId,COUNT(ProductName)AS Product FROM Orders o 
JOIN OrderDetails od ON o.OrderId = od.OrderId
GROUP BY o.OrderId
HAVING COUNT(*)>1

SELECT orderId,COUNT(ProductName) as Product 
FROM OrderDetails
GROUP BY OrderId
HAVING COUNT(*)>1

-- 28 Find the each order and its sum of ordered amount

SELECT orderId,SUM(Price) AS Order_Amount
FROM OrderDetails
GROUP BY OrderId

-- 29.	DML Query - CTE QUERY - Find the most ordered product USE CTE QUERY.
GO
WITH CTE AS(SELECT TOP 1 ProductName,COUNT(ProductName) AS TotalCount
            FROM OrderDetails
			GROUP BY ProductName
			ORDER BY TotalCount DESC
			)
			SELECT * FROM CTE

--30.	DML Query - List all order by date using descending order

SELECT CONVERT(DATE,OrderDate) AS DATE,OrderId,CustomerId
FROM Orders
GROUP BY OrderId,CustomerId,OrderDate

--31.	Find out the latest order that has been placed

SELECT TOP 1 * FROM Orders
ORDER BY OrderId DESC

--32.	Select the orders which has more than 1 product

SELECT OrderId,COUNT(ProductName) AS Product FROM OrderDetails
GROUP BY OrderId
HAVING COUNT(ProductName)>1

--33.	Find out the total price of each order by order id

SELECT OrderId,SUM(Price) AS Total_Price
FROM OrderDetails
GROUP BY OrderId

--34.	Find the product name that has been ordered most times

SELECT ProductName,COUNT(*) AS Count
FROM OrderDetails
GROUP BY ProductName
ORDER BY COUNT(*)DESC

--35.	Find the product name that been ordered least times

SELECT ProductName,COUNT(*) AS COUNT
FROM OrderDetails
GROUP BY ProductName
ORDER BY COUNT

-- 36.	Find out the total price of all orders by customer id

SELECT c.CustomerId,SUM(Price) AS Total_Price FROM Customers c
JOIN Orders o ON c.CustomerId = o.CustomerId
JOIN OrderDetails od ON o.OrderId =od.OrderId
GROUP BY c.CustomerId


--37.	Find out the customer who ordered for large sum of money

SELECT  TOP 1 c.CustomerId,SUM(Price) As Amount From Customers c 
JOIN Orders o ON c.CustomerId = o.CustomerId
JOIN OrderDetails od ON od.OrderId = o.OrderId
GROUP BY c.CustomerId
ORDER BY Amount DESC

--38.	Find on which day the largest number of quantity of products ordered and list down top 5 products in descending order

SELECT CONVERT(DATE,OrderDate) AS DATE,Quantity,ProductName FROM Orders o
JOIN OrderDetails od ON o.OrderId = od.OrderId
GROUP BY OrderDate,Quantity,ProductName
ORDER BY Quantity DESC

SELECT  TOP 5 FORMAT (orderDate , 'dddd, MMMM, yyyy') AS DAY,ProductName  ,Quantity FROM Orders o
JOIN OrderDetails od ON o.OrderId = od.OrderId
GROUP BY OrderDate,Quantity,ProductName
ORDER BY Quantity DESC

--39.	Find the First name , Last name and amount second top most customer who has order large sum of amounts

SELECT TOP 2 c.FirstName,c.LastName,SUM(Price) AS Amount FROM Customers c
JOIN Orders o ON c.CustomerId = o.CustomerId
JOIN OrderDetails od ON o.OrderId = od.OrderId
GROUP BY  c.FirstName,c.LastName
ORDER BY Amount DESC
